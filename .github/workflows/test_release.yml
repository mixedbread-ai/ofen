name: test-release

on:
  workflow_call:
    inputs:
      working-directory:
        required: true
        type: string
        description: "From which folder this pipeline executes"

env:
  PYTHON_VERSION: "3.10"
  UV_VERSION: "0.1.0"

jobs:
  lint:
    uses: ./.github/workflows/lint.yml
    with:
      working-directory: ${{ inputs.working-directory }}

  test:
    uses: ./.github/workflows/test.yml
    with:
      working-directory: ${{ inputs.working-directory }}

  build:
    if: github.ref == 'refs/heads/main'
    runs-on: ubuntu-latest
    needs: [lint, test]

    outputs:
      pkg-name: ${{ steps.check-version.outputs.pkg-name }}
      version: ${{ steps.check-version.outputs.version }}

    steps:
      - uses: actions/checkout@v4

      - name: Set up Python and uv
        uses: "./.github/actions/uv_setup"
        with:
          python-version: ${{ env.PYTHON_VERSION }}
          uv-version: ${{ env.UV_VERSION }}
          working-directory: ${{ inputs.working-directory }}
          cache-key: test_release

      - name: Build project
        working-directory: ${{ inputs.working-directory }}
        run: |
          uvx --from build pyproject-build --installer uv

      - name: Upload build
        uses: actions/upload-artifact@v4
        with:
          name: test-dist
          path: ${{ inputs.working-directory }}/dist/

      - name: Check Version
        id: check-version
        shell: bash
        working-directory: ${{ inputs.working-directory }}
        run: |
          echo pkg-name="$(grep -m 1 'name = ' pyproject.toml | cut -d '"' -f 2)" >> $GITHUB_OUTPUT
          echo version="$(grep -m 1 'version = ' pyproject.toml | cut -d '"' -f 2)" >> $GITHUB_OUTPUT

  publish:
    needs: [build]
    runs-on: ubuntu-latest
    permissions:
      id-token: write

    steps:
      - uses: actions/checkout@v4

      - uses: actions/download-artifact@v4
        with:
          name: test-dist
          path: ${{ inputs.working-directory }}/dist/

      - name: Publish to test PyPI
        uses: pypa/gh-action-pypi-publish@release/v1
        with:
          packages-dir: ${{ inputs.working-directory }}/dist/
          verbose: true
          print-hash: true
          repository-url: https://test.pypi.org/legacy/
          skip-existing: true
